spring:
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password:
    driver-class-name: org.h2.Driver

  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: false
    open-in-view: false

  cloud:
    config:
      enabled: false
    eureka:
      client:
        enabled: false

  flyway:
    enabled: false

  h2:
    console:
      enabled: true

bytebites:
  jwt:
    secret: { Water_secret }
    expiration: 86400000
    refresh-expiration: 604800000

  kafka:
    bootstrap-servers: ${spring.kafka.bootstrap-servers}
    topics:
      restaurant-events: restaurant-events

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  resilience4j:
    circuitbreaker:
      instances:
        test-circuit-breaker:
          sliding-window-size: 5
          minimum-number-of-calls: 3
          failure-rate-threshold: 50

logging:
  level:
    org.springframework.security: DEBUG
    com.example.authservice: DEBUG
    com.bytebites.restaurant: DEBUG
    org.testcontainers: INFO
    com.github.dockerjava: WARN
    org.springframework.kafka: WARN