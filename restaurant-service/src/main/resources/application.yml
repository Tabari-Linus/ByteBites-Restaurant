spring:
  application:
    name: restaurant-service
  config:
    import: optional:configserver:http://localhost:8888
  profiles:
    active: local


---
server:
  port: 8082

spring:
  application:
    name: restaurant-service
  config:
    activate:
      on-profile: local


  datasource:
    url: jdbc:postgresql://localhost:5433/${restaurant_db}
    username: ${db_username}
    password: ${ postgresdev }
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  flyway:
    baseline-on-migrate: true
    enabled: true

  kafka:
    bootstrap-servers: localhost:9093
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        acks: all
        retries: 3
        enable.idempotence: true

bytebites:
  kafka:
    topics:
      restaurant-events: restaurant-events

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90

management:
  endpoints:
    web:
      exposure:
        include: health,info

logging:
  level:
    com.bytebites.restaurant: DEBUG
    org.springframework.security: DEBUG