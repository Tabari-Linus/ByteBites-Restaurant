spring:
  application:
    name: notification-service
  config:
    import: optional:configserver:http://localhost:8888
  profiles:
    active: local

---
server:
  port: 8084

spring:
  config:
    activate:
      on-profile: local
  application:
    name: notification-service

  datasource:
    url: jdbc:postgresql://localhost:5435/notification_db
    username: mrlii
    password: postgresdev
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  flyway:
    baseline-on-migrate: true
    enabled: true

  kafka:
    bootstrap-servers: localhost:9093
    consumer:
      group-id: notification-service
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.bytebites.notificationservice.event,com.bytebites.orderservice.event,com.bytebites.restaurantservice.event"
        auto.offset.reset: earliest
        enable.auto.commit: false
        max.poll.records: 10

  mail:
    host: smtp.gmail.com
    port: 587
    username: tabarishadow@gmail.com
    password: pivk yfng affl fcbd
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90

bytebites:
  kafka:
    topics:
      order-events: order-events
      restaurant-events: restaurant-events

  email:
    enabled: true
    from: tabarishadow@gmail.com

resilience4j:
  circuitbreaker:
    instances:
      email-service:
        sliding-window-size: 8
        minimum-number-of-calls: 4
        failure-rate-threshold: 60
        wait-duration-in-open-state: 30s
        permitted-number-of-calls-in-half-open-state: 2
        automatic-transition-from-open-to-half-open-enabled: true
        record-exceptions:
          - org.springframework.mail.MailException
          - java.net.ConnectException
          - java.util.concurrent.TimeoutException

  retry:
    instances:
      email-service:
        max-attempts: 3
        wait-duration: 2s
        exponential-backoff-multiplier: 2
        enable-exponential-backoff: true
        retry-exceptions:
          - org.springframework.mail.MailException
          - java.net.ConnectException

      order-event-processing:
        max-attempts: 3
        wait-duration: 1s
        exponential-backoff-multiplier: 1.5
        retry-exceptions:
          - java.lang.RuntimeException

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,circuitbreakers,circuitbreakerevents,retryevents
  endpoint:
    health:
      show-details: always

logging:
  level:
    com.bytebites.notification: DEBUG
    org.springframework.kafka: DEBUG
    io.github.resilience4j: DEBUG