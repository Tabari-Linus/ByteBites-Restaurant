spring:
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password:
    driver-class-name: org.h2.Driver

  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true

  flyway:
    enabled: false

  h2:
    console:
      enabled: true


  kafka:
    bootstrap-servers: ${spring.embedded.kafka.brokers:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

resilience4j:
  circuitbreaker:
    instances:
      restaurant-service:
        sliding-window-size: 5
        minimum-number-of-calls: 3
        failure-rate-threshold: 50
        wait-duration-in-open-state: 1s
        permitted-number-of-calls-in-half-open-state: 2
        automatic-transition-from-open-to-half-open-enabled: true
        record-exceptions:
          - com.bytebites.orderservice.exception.RestaurantValidationException
          - java.util.concurrent.TimeoutException
          - java.net.ConnectException


bytebites:
  jwt:
    secret: test-secret-key-for-testing-purposes-only-not-for-production
    expiration: 86400000
    refresh-expiration: 604800000
  kafka:
    topics:
      order-events: order-events
  services:
    restaurant:
      url: http://localhost:8082

logging:
  level:
    org.springframework.security: DEBUG
    com.example.authservice: DEBUG
    io.github.resilience4j: DEBUG